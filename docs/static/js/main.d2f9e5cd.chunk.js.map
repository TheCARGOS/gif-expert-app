{"version":3,"sources":["components/AddCategory.jsx","components/GifItem.jsx","helpers/getGifs.jsx","hooks/useFetchGifs.js","components/GifGrid.jsx","components/GifExpertApp/index.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","onChange","target","value","placeholder","name","type","GifItem","image","alt","title","src","url","loading","getGifs","categoryName","a","fetch","encodeURI","response","json","data","gifs","map","img","images","downsized_medium","id","useFetchGifs","state","setState","useEffect","then","imgs","GifGrid","idx","GifExpertApp","category","ReactDOM","render","document","getElementById"],"mappings":"sOAqCeA,EAlCK,SAAC,GAGf,EAFFC,WAEG,IADHC,EACE,EADFA,cACE,EAEkCC,mBAAS,IAF3C,mBAEKC,EAFL,KAEiBC,EAFjB,KAgBF,OACI,8BACI,uBAAMC,UAAU,WAAWC,SAVhB,SAACC,GAChBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAMd,UACI,uBAAOC,UAAU,kBAAkBO,SAf1B,SAACL,GAClBH,EAAcG,EAAEM,OAAOC,QAc4CC,YAAY,YAAYC,KAAK,kBACxF,wBAAQX,UAAU,mBAAmBY,KAAK,SAA1C,qBCNDC,EAlBC,SAAC,GAEV,IADHC,EACE,EADFA,MAEA,OACI,qBAAKd,UAAU,iBAAf,SACI,mCACI,qBACIA,UAAU,oDACVe,IAAKD,EAAME,MACXC,IAAKH,EAAMI,IACXC,QAAQ,SAEZ,qCAAaL,EAAME,c,uBCdtBI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACIC,MAAM,mFAAD,OAAoFC,UAAUH,GAA9F,aADT,cACbI,EADa,gBAEIA,EAASC,OAFb,uBAEXC,EAFW,EAEXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,cAAK,CAC1Bd,MAAOc,EAAId,MACXE,IAAG,UAAEY,EAAIC,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8Bd,IACnCe,GAAIH,EAAIG,OAPO,kBAUZL,GAVY,2CAAH,sDCoBLM,EAjBM,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,aAAmB,EACbxB,mBAAS,CAC/B8B,KAAM,GACNR,SAAS,IAH0B,mBAChCgB,EADgC,KACzBC,EADyB,KAcvC,OARAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBT,KAAMY,EACNpB,SAAS,SAElB,CAACE,IAEGc,GCSIK,EAtBC,SAAC,GAEV,IADHnB,EACE,EADFA,aACE,EAEgCa,EAAa,CAACb,iBAAlCU,EAFZ,EAEMJ,KAAcR,EAFpB,EAEoBA,QAEtB,OACI,gCACI,oBAAInB,UAAU,oCAAd,SAAmDqB,IACnD,sBAAKrB,UAAU,WAAf,UACMmB,GAAW,sBAAMnB,UAAU,mCAAhB,wBACX+B,EAAOF,KAAI,SAACC,EAAKW,GAAN,OACT,cAAC,EAAD,CAEI3B,MAAOgB,GAFX,UACYA,EAAId,OADhB,OACwByB,cCX/BC,EAAe,WAAO,IAAD,EACM7C,mBAAS,IADf,mBACvBF,EADuB,KACXC,EADW,KAG9B,OACI,gCACI,gDAEA,cAAC,EAAD,CACID,WAAYA,EACZC,cAAeA,IAElBD,EAAWkC,KAAI,SAAAc,GAAQ,OACpB,cAAC,EAAD,CACItB,aAAcsB,WCdlCC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2f9e5cd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({\r\n    categories,\r\n    setCategories\r\n}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='gif-form' onSubmit={handleSave}>\r\n                <input className='gif-form__input' onChange={handleChange} placeholder='categoria' name='categoryInput' />\r\n                <button className='gif-form__button' type='submit'>+</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifItem = ({\r\n    image\r\n}) => {\r\n    return (\r\n        <div className='gif-list__item'>\r\n            <figure>\r\n                <img\r\n                    className='animate__animated animate__fadeIn animate__delay2'\r\n                    alt={image.title}\r\n                    src={image.url}\r\n                    loading='lazy'\r\n                />\r\n                <figcaption>{image.title}</figcaption>\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItem\r\n","export const getGifs = async (categoryName) => {\r\n    const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=l2skW87FFu0bl3R4fAU3lqqU3AWfICuN&q=${encodeURI(categoryName)}&limit=3`)\r\n    const { data } = await response.json()\r\n\r\n    const gifs = data.map(img => ({\r\n        title: img.title,\r\n        url: img.images?.downsized_medium?.url,\r\n        id: img.id\r\n    }))\r\n\r\n    return gifs\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ({ categoryName }) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(categoryName)\r\n            .then(imgs => setState({\r\n                data: imgs,\r\n                loading: false\r\n            }))\r\n    }, [categoryName])\r\n\r\n    return state\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React, { useState, useEffect } from 'react'\r\nimport GifItem from './GifItem'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({\r\n    categoryName\r\n}) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs({categoryName})\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='animate__animated animate__fadeIn'>{categoryName}</h2>\r\n            <div className='gif-list'>\r\n                { loading && <span className='animate__animated animate__flash'>loading...</span> }\r\n                { images.map((img, idx) => (\r\n                    <GifItem\r\n                        key={`${img.title}${idx}`}\r\n                        image={img}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import './style.module.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport AddCategory from '../AddCategory'\r\nimport GifGrid from '../GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n\r\n            <AddCategory\r\n                categories={categories}\r\n                setCategories={setCategories}\r\n            />\r\n            {categories.map(category => (\r\n                <GifGrid\r\n                    categoryName={category}            \r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp/'\n\nReactDOM.render(\n  // <App />,\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}